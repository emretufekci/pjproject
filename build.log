configure-iphone: DEVPATH is not specified, using /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer
configure-iphone: IPHONESDK is not specified, choosing iPhoneOS15.2.sdk
configure-iphone: ARCH is not specified, choosing -arch arm64
configure-iphone: MIN_IOS is not specified, choosing 7.0
configure-iphone: CXX is not specified, using clang++
configure-iphone: calling ./aconfigure with env vars:
 MIN_IOS = -miphoneos-version-min=7.0
 CC = clang
 CXX = clang++
 SDKPATH = /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.2.sdk
 CFLAGS = -O2 -Wno-unused-label -miphoneos-version-min=7.0 -DPJ_SDK_NAME="\"iPhoneOS15.2.sdk\"" -arch arm64 -isysroot /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.2.sdk
 LDFLAGS = -O2 -miphoneos-version-min=7.0 -arch arm64 -isysroot /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.2.sdk -framework AudioToolbox -framework Foundation
 AR = /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/../../../Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool -static -o
 RANLIB = echo ranlib
 ARCH = arm64
checking build system type... x86_64-apple-darwin21.2.0
checking host system type... arm64-apple-darwin_ios
checking target system type... arm64-apple-darwin_ios
checking for arm64-apple-darwin_ios-gcc... clang
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... yes
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether clang accepts -g... yes
checking for clang option to enable C11 features... none needed
checking whether the compiler supports GNU C++... yes
checking whether clang++ accepts -g... yes
checking for clang++ option to enable C++11 features... none needed
checking for arm64-apple-darwin_ios-ranlib... echo ranlib
checking for arm64-apple-darwin_ios-ar... /Applications/XCode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/../../../Toolchains/XcodeDefault.xctoolchain/usr/bin/libtool -static -o
checking for pthread_create in -lpthread... yes
checking for puts in -lwsock32... no
checking for puts in -lws2_32... no
checking for puts in -lole32... no
checking for puts in -lwinmm... no
checking for puts in -lsocket... no
checking for puts in -lrt... no
checking for sin in -lm... yes
checking for uuid_generate in -luuid... no
checking for uuid_generate in -luuid... (cached) no
checking for library containing gethostbyname... none required
Setting PJ_M_NAME to arm64
checking memory alignment... 8 bytes
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking whether byte ordering is bigendian... no
Checking if floating point is disabled... no
checking for arpa/inet.h... yes
checking for assert.h... yes
checking for ctype.h... yes
checking for errno.h... yes
checking for fcntl.h... yes
checking for linux/socket.h... no
checking for limits.h... yes
checking for malloc.h... no
checking for netdb.h... yes
checking for netinet/in_systm.h... yes
checking for netinet/in.h... yes
checking for netinet/ip.h... yes
checking for netinet/tcp.h... yes
checking for ifaddrs.h... yes
checking for getifaddrs... yes
checking for semaphore.h... yes
checking for setjmp.h... yes
checking for stdarg.h... yes
checking for stddef.h... yes
checking for stdio.h... (cached) yes
checking for stdint.h... (cached) yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking for sys/ioctl.h... yes
checking for sys/select.h... yes
checking for sys/socket.h... yes
checking for sys/time.h... yes
checking for sys/timeb.h... yes
checking for sys/types.h... (cached) yes
checking for sys/filio.h... yes
checking for sys/sockio.h... yes
checking for sys/utsname.h... yes
checking for time.h... yes
checking for unistd.h... (cached) yes
checking for winsock.h... no
checking for winsock2.h... no
checking for mswsock.h... no
checking for ws2tcpip.h... no
checking for uuid/uuid.h... yes
checking for net/if.h... yes
checking for localtime_r... yes
Setting PJ_OS_NAME to arm64-apple-darwin_ios
Setting PJ_HAS_ERRNO_VAR to 1
Setting PJ_HAS_HIGH_RES_TIMER to 1
Setting PJ_HAS_MALLOC to 1
Setting PJ_NATIVE_STRING_IS_UNICODE to 0
Setting PJ_ATOMIC_VALUE_TYPE to long
checking if inet_aton() is available... yes
checking if inet_pton() is available... yes
checking if inet_ntop() is available... yes
checking if getaddrinfo() is available... yes
checking if sockaddr_in has sin_len member... yes
checking if socklen_t is available... yes
checking if IPV6_V6ONLY is available... yes
checking if SO_ERROR is available... yes
checking if pthread_rwlock_t is available... yes
checking if pthread_mutexattr_settype() is available... no
checking if pthread_mutexattr_t has recursive member... no
checking ioqueue backend... select()
Building shared libraries... no
Building pjsua2 library and application... yes
checking for sys/soundcard.h... no
checking for linux/soundcard.h... no
checking for machine/soundcard.h... no
Checking sound device backend... AudioUnit
Checking if AVFoundation framework is available... yes
Checking if VideoToolbox framework is available... yes
Checking if OpenGLES framework is available... yes
Checking if small filter is disabled... no
Checking if large filter is disabled... no
Checking if Speex AEC is disabled...no
Checking if G.711 codec is disabled...no
Checking if L16 codec is disabled...no
Checking if GSM codec is disabled...no
Checking if G.722 codec is disabled...no
Checking if G.722.1 codec is disabled...no
Checking if Speex codec is disabled...no
Checking if iLBC codec is disabled...no
Checking if libsamplerate is enabled...no
Building libresample as shared library... no
Checking if Speex resample is enabled... no
Checking if SDL is disabled... yes
Checking if ffmpeg is disabled... yes
checking for v4l2_open in -lv4l2... no
Checking if OpenH264 is disabled... yes
Checking if VPX is disabled... yes
Skipping Intel IPP settings (not wanted)
Checking if Darwin SSL is available... no
Using SSL prefix... /usr/local/openssl-ios64/
checking for OpenSSL installations..
checking for openssl/ssl.h... yes
checking for ERR_load_BIO_strings in -lcrypto... yes
checking for SSL_CTX_new in -lssl... yes
OpenSSL library found, SSL support enabled
checking for EVP_aes_128_gcm in -lcrypto... yes
OpenSSL has AES GCM support, SRTP will use OpenSSL
Checking if OpenCORE AMR support is disabled... yes
Checking if SILK support is disabled... yes
checking for OPUS installations..
checking for opus/opus.h... no
checking for opus_repacketizer_get_size in -lopus... no
OPUS library not found, OPUS support disabled
Checking if bcg729 is disabled... yes
Checking if libyuv is disabled...no
Checking if libwebrtc is disabled...no
Checking if libwebrtc-aec3 is enabled...no
checking if select() needs correct nfds... no (default)
** Decided that select() doesn't need correct nfds (please check)
checking if pj_thread_create() should enforce stack size... no (default)
checking if pj_thread_create() should allocate stack... no (default)
** Setting non-blocking recv() retval to EAGAIN (please check)
** Setting non-blocking connect() retval to EINPROGRESS (please check)
aconfigure: creating ./config.status
config.status: creating build.mak
config.status: creating build/os-auto.mak
config.status: creating build/cc-auto.mak
config.status: creating pjlib/build/os-auto.mak
config.status: creating pjlib-util/build/os-auto.mak
config.status: creating pjmedia/build/os-auto.mak
config.status: creating pjsip/build/os-auto.mak
config.status: creating third_party/build/os-auto.mak
config.status: creating pjlib/include/pj/compat/os_auto.h
config.status: pjlib/include/pj/compat/os_auto.h is unchanged
config.status: creating pjlib/include/pj/compat/m_auto.h
config.status: pjlib/include/pj/compat/m_auto.h is unchanged
config.status: creating pjmedia/include/pjmedia/config_auto.h
config.status: pjmedia/include/pjmedia/config_auto.h is unchanged
config.status: creating pjmedia/include/pjmedia-codec/config_auto.h
config.status: pjmedia/include/pjmedia-codec/config_auto.h is unchanged
config.status: creating pjsip/include/pjsip/sip_autoconf.h
config.status: pjsip/include/pjsip/sip_autoconf.h is unchanged


Configurations for current target have been written to 'build.mak', and 'os-auto.mak' in various build directories, and pjlib/include/pj/compat/os_auto.h.

Further customizations can be put in:
  - 'user.mak'
  - 'pjlib/include/pj/config_site.h'

The next step now is to run 'make dep' and 'make'.

Done configuring for iPhoneOS15.2.sdk

